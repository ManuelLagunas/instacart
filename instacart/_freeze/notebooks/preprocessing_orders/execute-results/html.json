{
  "hash": "fd750a19c03a777a1a4d299e68133ac0",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Preprocessing orders\"\nformat: \n    html:\n        toc: true\n        toc-depth: 4\n---\n\n:::{#af34ec1f .cell .markdown}\n# Libraries\n:::\n\n::: {#1dc0350a .cell execution_count=1}\n``` {}\n#  ---------- libraries ---------\nimport pandas as pd\nimport numpy as np\n```\n:::\n\n\n:::{#f5a87282 .cell .markdown}\n# Read data\n:::\n\n::: {#7491b51d .cell execution_count=2}\n``` {}\n# ---------- read data ----------\ndf = pd.read_csv('datasets/instacart_orders_raw.csv', sep=';')\n```\n:::\n\n\n:::{#aecdc403 .cell .markdown}\n# Preprocessing\n\n## Duplicated data\n:::\n\n::: {#48c3ba5b .cell execution_count=3}\n``` {}\n# ---------- preprocessing ----------\n# duplicated data ----------\ndf[df.duplicated()]\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>order_id</th>\n      <th>user_id</th>\n      <th>order_number</th>\n      <th>order_dow</th>\n      <th>order_hour_of_day</th>\n      <th>days_since_prior_order</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>145574</th>\n      <td>794638</td>\n      <td>50898</td>\n      <td>24</td>\n      <td>3</td>\n      <td>2</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>223105</th>\n      <td>2160484</td>\n      <td>107525</td>\n      <td>16</td>\n      <td>3</td>\n      <td>2</td>\n      <td>30.0</td>\n    </tr>\n    <tr>\n      <th>230807</th>\n      <td>1918001</td>\n      <td>188546</td>\n      <td>14</td>\n      <td>3</td>\n      <td>2</td>\n      <td>16.0</td>\n    </tr>\n    <tr>\n      <th>266232</th>\n      <td>1782114</td>\n      <td>106752</td>\n      <td>1</td>\n      <td>3</td>\n      <td>2</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>273805</th>\n      <td>1112182</td>\n      <td>202304</td>\n      <td>84</td>\n      <td>3</td>\n      <td>2</td>\n      <td>6.0</td>\n    </tr>\n    <tr>\n      <th>284038</th>\n      <td>2845099</td>\n      <td>31189</td>\n      <td>11</td>\n      <td>3</td>\n      <td>2</td>\n      <td>7.0</td>\n    </tr>\n    <tr>\n      <th>311713</th>\n      <td>1021560</td>\n      <td>53767</td>\n      <td>3</td>\n      <td>3</td>\n      <td>2</td>\n      <td>9.0</td>\n    </tr>\n    <tr>\n      <th>321100</th>\n      <td>408114</td>\n      <td>68324</td>\n      <td>4</td>\n      <td>3</td>\n      <td>2</td>\n      <td>18.0</td>\n    </tr>\n    <tr>\n      <th>323900</th>\n      <td>1919531</td>\n      <td>191501</td>\n      <td>32</td>\n      <td>3</td>\n      <td>2</td>\n      <td>7.0</td>\n    </tr>\n    <tr>\n      <th>345917</th>\n      <td>2232988</td>\n      <td>82565</td>\n      <td>1</td>\n      <td>3</td>\n      <td>2</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>371905</th>\n      <td>391768</td>\n      <td>57671</td>\n      <td>19</td>\n      <td>3</td>\n      <td>2</td>\n      <td>10.0</td>\n    </tr>\n    <tr>\n      <th>394347</th>\n      <td>467134</td>\n      <td>63189</td>\n      <td>21</td>\n      <td>3</td>\n      <td>2</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>411408</th>\n      <td>1286742</td>\n      <td>183220</td>\n      <td>48</td>\n      <td>3</td>\n      <td>2</td>\n      <td>4.0</td>\n    </tr>\n    <tr>\n      <th>415163</th>\n      <td>2282673</td>\n      <td>86751</td>\n      <td>49</td>\n      <td>3</td>\n      <td>2</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>441599</th>\n      <td>2125197</td>\n      <td>14050</td>\n      <td>48</td>\n      <td>3</td>\n      <td>2</td>\n      <td>3.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#ceb704da .cell execution_count=4}\n``` {}\nprint('El numero de valores duplicados es:',df.duplicated().sum())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nEl numero de valores duplicados es: 15\n```\n:::\n:::\n\n\n:::{#817b4314 .cell .markdown}\nLos valores duplicados tienen en comun que son del dia miercoles a las 2, por lo que seria bueno estudiar mas a fondo esta hipotesis preio a dar alguna solucion\n\n### Duplicated data study\nHipotesis: Todos los pedisos duplicados se realizaron el día miercoles a las 2\n:::\n\n::: {#173e35e3 .cell execution_count=5}\n``` {}\ndf[(df['order_dow'] == 3) & (df['order_hour_of_day']==2)]\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>order_id</th>\n      <th>user_id</th>\n      <th>order_number</th>\n      <th>order_dow</th>\n      <th>order_hour_of_day</th>\n      <th>days_since_prior_order</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>4838</th>\n      <td>2766110</td>\n      <td>162084</td>\n      <td>41</td>\n      <td>3</td>\n      <td>2</td>\n      <td>16.0</td>\n    </tr>\n    <tr>\n      <th>5156</th>\n      <td>2190225</td>\n      <td>138285</td>\n      <td>18</td>\n      <td>3</td>\n      <td>2</td>\n      <td>11.0</td>\n    </tr>\n    <tr>\n      <th>15506</th>\n      <td>553049</td>\n      <td>58599</td>\n      <td>13</td>\n      <td>3</td>\n      <td>2</td>\n      <td>7.0</td>\n    </tr>\n    <tr>\n      <th>18420</th>\n      <td>382357</td>\n      <td>120200</td>\n      <td>19</td>\n      <td>3</td>\n      <td>2</td>\n      <td>11.0</td>\n    </tr>\n    <tr>\n      <th>24691</th>\n      <td>690242</td>\n      <td>77357</td>\n      <td>2</td>\n      <td>3</td>\n      <td>2</td>\n      <td>9.0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>457013</th>\n      <td>3384021</td>\n      <td>14881</td>\n      <td>6</td>\n      <td>3</td>\n      <td>2</td>\n      <td>30.0</td>\n    </tr>\n    <tr>\n      <th>458816</th>\n      <td>910166</td>\n      <td>164782</td>\n      <td>18</td>\n      <td>3</td>\n      <td>2</td>\n      <td>4.0</td>\n    </tr>\n    <tr>\n      <th>459635</th>\n      <td>1680532</td>\n      <td>106435</td>\n      <td>6</td>\n      <td>3</td>\n      <td>2</td>\n      <td>21.0</td>\n    </tr>\n    <tr>\n      <th>468324</th>\n      <td>222962</td>\n      <td>54979</td>\n      <td>59</td>\n      <td>3</td>\n      <td>2</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>477526</th>\n      <td>2592344</td>\n      <td>46860</td>\n      <td>38</td>\n      <td>3</td>\n      <td>2</td>\n      <td>3.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>121 rows × 6 columns</p>\n</div>\n```\n:::\n:::\n\n\n:::{#86e19194 .cell .markdown}\nLa hipotesis es correcta. Lo que suguiere que se puede tratar de un error temporal en el sistema de captura de datos\n\n### Duplicated data elimination\n:::\n\n::: {#3e421e52 .cell execution_count=6}\n``` {}\n# duplicated data elimination ----------\ndf = df.drop_duplicates().reset_index(drop=True)\nduplicates = df[df.duplicated()]\nprint(duplicates)\nprint()\nprint('El numero de valores duplicados es:',df.duplicated().sum())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nEmpty DataFrame\nColumns: [order_id, user_id, order_number, order_dow, order_hour_of_day, days_since_prior_order]\nIndex: []\n\nEl numero de valores duplicados es: 0\n```\n:::\n:::\n\n\n:::{#797e326b .cell .markdown}\nSe encontraron y eliminaron 15 valores duplicados\n\n## Missing data\n:::\n\n::: {#ac182e00 .cell execution_count=7}\n``` {}\n# missing data ----------\nprint('Numero de valores ausentes')\nprint(df.isna().sum())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNumero de valores ausentes\norder_id                      0\nuser_id                       0\norder_number                  0\norder_dow                     0\norder_hour_of_day             0\ndays_since_prior_order    28817\ndtype: int64\n```\n:::\n:::\n\n\n::: {#46bcbd82 .cell execution_count=8}\n``` {}\nprint('Porcentaje que representan de valores ausentes')\nprint((df.isna().sum()/df.shape[0]) * 100)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nPorcentaje que representan de valores ausentes\norder_id                  0.000000\nuser_id                   0.000000\norder_number              0.000000\norder_dow                 0.000000\norder_hour_of_day         0.000000\ndays_since_prior_order    6.016678\ndtype: float64\n```\n:::\n:::\n\n\n:::{#adffe97b .cell .markdown}\nLos valores ausentes pertenecen a la columna de days_since_prior_order por lo que sugiere que los valores ausentes son registros asociados al primer pedido. Ya que no habrá días después de la primera orden si el registro corresponde precisamente a la primer orden. Por lo que los valores ausentes se pueden inputar con el valor 0.\n:::\n\n::: {#767e5588 .cell execution_count=9}\n``` {}\ndf['days_since_prior_order'] = df['days_since_prior_order'].fillna(0)\nprint('El numero de valores duplicados es:',df.duplicated().sum())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nEl numero de valores duplicados es: 0\n```\n:::\n:::\n\n\n:::{#ee47b4d8 .cell .markdown}\n## Data types\n:::\n\n::: {#edce7856 .cell execution_count=10}\n``` {}\n# data types ----------\ndf.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 478952 entries, 0 to 478951\nData columns (total 6 columns):\n #   Column                  Non-Null Count   Dtype  \n---  ------                  --------------   -----  \n 0   order_id                478952 non-null  int64  \n 1   user_id                 478952 non-null  int64  \n 2   order_number            478952 non-null  int64  \n 3   order_dow               478952 non-null  int64  \n 4   order_hour_of_day       478952 non-null  int64  \n 5   days_since_prior_order  478952 non-null  float64\ndtypes: float64(1), int64(5)\nmemory usage: 21.9 MB\n```\n:::\n:::\n\n\n::: {#e809d7de .cell execution_count=11}\n``` {}\ndf['order_id'] = df['order_id'].astype('str')\ndf['user_id'] = df['user_id'].astype('str')\ndf['days_since_prior_order'] = df['days_since_prior_order'].astype('int')\n```\n:::\n\n\n::: {#aaa383f6 .cell execution_count=12}\n``` {}\ndf.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 478952 entries, 0 to 478951\nData columns (total 6 columns):\n #   Column                  Non-Null Count   Dtype \n---  ------                  --------------   ----- \n 0   order_id                478952 non-null  object\n 1   user_id                 478952 non-null  object\n 2   order_number            478952 non-null  int64 \n 3   order_dow               478952 non-null  int64 \n 4   order_hour_of_day       478952 non-null  int64 \n 5   days_since_prior_order  478952 non-null  int64 \ndtypes: int64(4), object(2)\nmemory usage: 21.9+ MB\n```\n:::\n:::\n\n\n:::{#2fe2a86b .cell .markdown}\n# Save data\n:::\n\n::: {#7707872c .cell execution_count=13}\n``` {}\n# ---------- save data ----------\ndf.to_csv('datasets/clean_orders.csv', index=False)\n```\n:::\n\n\n",
    "supporting": [
      "preprocessing_orders_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}